kind: pipeline
type: docker
name: CI_Book

trigger :
    event:
        - push
steps:
  - name : build
    image : mcr.microsoft.com/dotnet/sdk:7.0
    commands:
          - cd Sources
          - dotnet restore OpenLibraryWS_Wrapper.sln
          - dotnet build OpenLibraryWS_Wrapper.sln -c Release --no-restore
          - dotnet publish OpenLibraryWS_Wrapper.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
        
  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - cd Sources
      - dotnet restore OpenLibraryWS_Wrapper.sln
      - dotnet test OpenLibraryWS_Wrapper.sln --no-restore
    depends_on: [build]

  - name: code-analysis
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet7
    commands:
      - cd Sources/
      - dotnet restore OpenLibraryWS_Wrapper.sln
      - dotnet sonarscanner begin /k:OpenLibraryWS_Wrapper-Bruno /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
      - dotnet build
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
      - dotnet publish OpenLibraryWS_Wrapper.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release -f:net7.0-android /p:AndroidSdkDirectory=/usr/lib/android-sdk
    secrets: [ SECRET_SONAR_LOGIN ]
    settings:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
    depends_on: [tests]

  - name: generate-and-deploy-docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    commands:
      - /entrypoint.sh
    when:
      branch:
        - master
      event:
        - push
        - pull_request
    depends_on: [build,tests]
    